@{
    ViewBag.Title = "uploadToCanvas";
}

<script src="~/Scripts/atrament.js"></script>
<script src="~/Scripts/jquery-1.10.2.min.js"></script>
<script src="https://ajax.googleapis.com/ajax/libs/jquery/2.1.1/jquery.min.js"></script>


<meta http-equiv="Content-Type" content="text/html; charset=UTF-8" />
<meta name="viewport" content="width=320; initial-scale=1.0; maximum-scale=1.0; user-scalable=0;">


<input type='file' id="imageLoader" accept="image/*">

<canvas id="imageCanvas" width="700" height="300" style="border: 3px solid black;"></canvas>


<style>
    canvas {
        position: fixed;
    }

    form {
        z-index: 3;
        position: absolute;
        background: rgba(0, 0, 0, 0.7);
        color: white;
    }

        form * {
        }
</style>


<script>
var canvas = $('#imageCanvas')[0];
var ctx = canvas.getContext('2d');

var canvas1 = document.getElementById('imageCanvas');
		var atrament = atrament(canvas1, 300, 700);
		var clearButton = document.getElementById('clear');
		canvas1.addEventListener('dirty', function(e) {
			clearButton.style.display = atrament.dirty ? 'inline-block' : 'none';
		});

var width;
var length;
var imageLoader = $('#imageLoader')[0];
imageLoader.addEventListener('change', handleImage, false);


// default image
var defImg = new Image();
defImg.src = "http://www.rhlaw.com/blog/wp-content/uploads/2011/10/kitten-300x300.jpg";
defImg.onload = function() {
    canvas.width = defImg.width;
    canvas.height = defImg.height;
    ctx.drawImage(defImg, 0, 0);
};
// user loaded image
function handleImage() {
    if (this.files && this.files[0]) {
        var reader = new FileReader();
        reader.onload = function(event) {
            var img = new Image();
            img.src = event.target.result;
            img.onload = function() {
                canvas.width = 700;
                canvas.height = 500;
                ctx.drawImage(img, 0, 0);
            };
        };
        reader.readAsDataURL(this.files[0]);
    }
}
</script>

<br>
<br />
<br>
<br />
<br>
<br />
<br>
<br />
<br>
<br />
<br>
<br />
<br>
<br />
<br>
<br />
<br>
<br />
<br>
<br>
<br />
<br>
<br />
<br>
<br />
<br>
<br />
<br>
<br>
<br />
<br>
<br />
<br>
<br />
<br>
<br />
<br>
<br>
<br />
<br>
<br />
<br>
<br />

<form>
    <button id="clear" onclick="event.preventDefault(); atrament.clear();">clear</button><br>

    <label>Thickness</label><br>
    <input type="range" min="1" max="40" oninput="atrament.weight = parseFloat(event.target.value);" value="2" step="0.1" autocomplete="off" /><br>
    <label>Smoothing</label><br>
    <input type="checkbox" onchange="atrament.smoothing = event.target.checked;" checked autocomplete="off"><br>
    <label>Adaptive stroke</label><br>
    <input type="checkbox" onchange="atrament.adaptiveStroke = event.target.checked;" checked autocomplete="off"><br>
    <label>Mode</label>
    <select onchange="atrament.mode = event.target.value;">
        <option value="draw" default>Draw</option>
        <option value="fill" default>Fill</option>
        <option value="erase" default>Erase</option>
    </select><br>
    <label>Colour</label>
    <input type="color" onchange="atrament.color = event.target.value;" value="#000000" autocomplete="off"><br>
    <label>Opacity</label><br>
    <input type="range" min="0" max="1" onchange="atrament.opacity = parseFloat(event.target.value);" value="1" step="0.05" autocomplete="off">

</form>
<br />
<br>
<br />
<br>
<br>
<br />
<br>
<br />
<br>
<br />
<br>
<br />
<br>

<div class="lib">
    <h1>E-Library</h1>
    @{
        ViewBag.Title = "Files";
        var Files = (ViewBag.Files as string[]);

        if (Files != null && Files.Any())
        {
            foreach (var file in Files)
            {
                <br />
                    @Html.ActionLink(file, "DownloadFile", new { fileName = file })
                    <br />

            }
        }
        else
        {
            <label>No File(s) to Download</label>
        }

            



    }


</div>
<li>@Html.ActionLink("Back to Create a wall", "Index", "Home")</li>
<br />

<img id="canvasImg" alt="Right click on the canvas to save!">

<image id="canvasImg"></image>

<script>
    function exportAndView() {
      var canvas3 = document.getElementById('imageCanvas');
      var context = canvas3.getContext('2d');
      var dataURL = canvas3.toDataURL();
      document.getElementById('canvasImg').src = dataURL;
      }

</script>

<br>
<br />